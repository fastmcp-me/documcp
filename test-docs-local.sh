#!/bin/bash
# Containerized documentation testing script
# Generated by DocuMCP

set -e

# Detect container runtime
if command -v podman &> /dev/null; then
    CONTAINER_CMD="podman"
elif command -v docker &> /dev/null; then
    CONTAINER_CMD="docker"
else
    echo "❌ Neither Podman nor Docker found. Please install one of them."
    echo "📖 Podman: https://podman.io/getting-started/installation"
    echo "📖 Docker: https://docs.docker.com/get-docker/"
    exit 1
fi

echo "🔧 Using $CONTAINER_CMD for containerized documentation testing..."

# Build the documentation container
echo "📦 Building documentation container..."
$CONTAINER_CMD build -f Dockerfile.docs -t documcp-docs .

if [ $? -ne 0 ]; then
    echo "❌ Container build failed!"
    exit 1
fi

echo "✅ Container build successful!"

# Run link checking outside container (faster)
echo "🔗 Checking for broken links..."
if command -v markdown-link-check &> /dev/null; then
    find docs -name "*.md" -exec markdown-link-check {} \;
else
    echo "⚠️  markdown-link-check not found. Install with: npm install -g markdown-link-check"
fi

# Start the container
echo ""
echo "🚀 Starting documentation server in container..."
echo "📖 Documentation will be available at: http://localhost:3001"
echo "💡 Press Ctrl+C to stop the server"
echo ""

# Run container with port mapping and cleanup
$CONTAINER_CMD run --rm -p 3001:3001 --name documcp-docs-test documcp-docs
