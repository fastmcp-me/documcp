name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  test:
    name: Pre-release Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run full test suite
      run: npm test -- --coverage
      
    - name: Verify 80% coverage threshold
      run: |
        coverage=$(npm test -- --coverage --silent | grep "All files" | awk '{print $4}' | sed 's/%//')
        if (( $(echo "$coverage < 80" | bc -l) )); then
          echo "Coverage $coverage% is below 80% threshold"
          exit 1
        fi
        echo "Coverage $coverage% meets requirement"
        
    - name: Performance benchmarks
      run: npm run test:performance
      
    - name: Build verification
      run: npm run build

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Generate changelog
      id: changelog
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "Manual release triggered"
          echo "changelog=Manual release - version bump: ${{ github.event.inputs.version_type }}" >> $GITHUB_OUTPUT
        else
          echo "Tag-based release"
          tag=${GITHUB_REF#refs/tags/}
          echo "changelog=Release $tag" >> $GITHUB_OUTPUT
        fi
        
    - name: Create GitHub Release
      if: github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## DocuMCP Release ${{ github.ref_name }}
          
          ### Features
          - MCP Server for intelligent documentation deployment
          - Repository analysis and SSG recommendations
          - Automated GitHub Pages deployment workflows
          
          ### Coverage
          - Test Coverage: 80%+ (requirement met)
          - Performance: PERF-001 compliant
          - Security: Automated dependency scanning
          
          ### Installation
          ```bash
          npm install -g documcp@${{ github.ref_name }}
          ```
        draft: false
        prerelease: false
        
    - name: Publish to npm
      if: github.event_name == 'push'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [test, release]
    permissions:
      pages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate test coverage
      run: npm run test:coverage
      
    - name: Generate documentation
      run: |
        mkdir -p docs-site
        cp README.md docs-site/index.md
        cp -r docs/ docs-site/
        if [ -d "coverage/" ]; then
          cp -r coverage/ docs-site/coverage/
        fi
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs-site
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4